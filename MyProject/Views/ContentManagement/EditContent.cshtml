@model MyProject.Models.ViewModels.ContentManagement.ContentDetailSummaryViewModel

@{
    ViewBag.Title = "Edit Content";
}

<script src="/Scripts/jquery-1.10.2.min.js"
    type="text/javascript"></script>

<script type="text/javascript">
    //$(function () {
    // Document.ready -> link up remove event handler
    function hideFieldBasedOnType(selectedValue) {
        if (selectedValue == "Ad") {
            document.getElementById('contentImage').style.display = "block";
            document.getElementById('routeItem').style.display = "block";
            document.getElementById('displayOrder').style.display = "block";
        }
        if (selectedValue == "None") {
            document.getElementById('contentImage').style.display = "none";
            document.getElementById('routeItem').style.display = "none";
            document.getElementById('displayOrder').style.display = "none";
        }
    }
    //});
</script>

<body>
    <section id="ProductForm">
        @using (Html.BeginForm("EditContent", "ContentManagement", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" , model = Model}))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <hr>

                @Html.DropDownList("contentTypeSelection", Model.ContentTypes, new { id = "contentTypeSelection", onchange = "hideFieldBasedOnType(this.options[this.selectedIndex].value);" })
                
                <div class="medium-6 columns" id="contentImage" style="display: none">
                    <div class="row">
                        @{
                            if (Model.Image != null)
                            {
                                var base64 = Convert.ToBase64String(@Model.Image);
                                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                            <img alt="@Model.Description" src="@imgSrc" height="400" width="400"/>
                            }
                            else
                            {
                                            <img src="~/Content/Images/ProductDefault.png" height="400" width="400" />
                            }}
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.ContentImage, new { type = "file" })
                                @Html.ValidationMessage("CustomMessage")
                            </div>
                        </div>
                    </div>

                </div>


                <div class="row">
                    <hr>

                    <div class="large-5 columns">
                        @Html.HiddenFor(m => m.Id)
                        <div class="form-group">
                            @Html.LabelFor(m => m.Code, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DisplayTextFor(m => m.Code)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Description, new {@class = "col-md-2 control-label"})
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Description)
                                @Html.ValidationMessageFor(m => m.Description, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        <div class="form-group" id="routeItem">
                            @Html.LabelFor(m => m.RouteTo, new {@class = "col-md-2 control-label"})
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RouteTo)
                                @Html.ValidationMessageFor(m => m.RouteTo, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div class="form-group" id="displayOrder">
                            @Html.LabelFor(m => m.DisplayOrder, new {@class = "col-md-2 control-label"})
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.DisplayOrder)
                                @Html.ValidationMessageFor(m => m.DisplayOrder, "", new {@class = "text-danger"})
                            </div>
                        </div>

                        <div>
                            <input type="submit" class="small success button" value="Save" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </section>

</body>


