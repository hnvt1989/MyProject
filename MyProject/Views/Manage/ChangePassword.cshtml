@model MyProject.Models.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}


@*<div class="row">
    <div class="large-12 columns text-center">
        <h1>Change Password</h1>
    </div>
</div>*@

<div class="row">
    <div class="col-md-8">
        <section id="ProfileForm">
            @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" }) *@
                <fieldset>
                    <legend><h3>Change Password</h3></legend>
                    <div class="form-group">
                        @Html.LabelFor(m => m.OldPassword, new {@class = "col-md-2 control-label"})
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.OldPassword, new {@class = "form-control"})
                        </div>
                        <div>
                        @foreach (var modelError in 
                                 ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
                        {
                            <span class="field-validation-error">@modelError.ErrorMessage</span>
                            
                            
                        }
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword, new {@class = "col-md-2 control-label"})
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.NewPassword, new Dictionary<string, Object> {{"class", "form-control"}, {"placeholder", "Must be between 5 and 10 characters."}})
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-md-2 control-label"})
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.ConfirmPassword, new Dictionary<string, Object> {{"class", "form-control"}, {"placeholder", "Must be between 5 and 10 characters."}})
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Change password" class="medium success button"/>
                        </div>
                    </div>
                </fieldset>        

            }

        </section>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}